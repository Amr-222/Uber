@{
    ViewData["Title"] = "Admin Management";
    var admins = TempData["Admins"] as List<Uber.DAL.Entities.Admin> ?? new List<Uber.DAL.Entities.Admin>();
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
    }

    .header {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        color: white;
        padding: 20px 0;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    }

    .header-content {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 20px;
    }

    .header h1 {
        font-size: 28px;
        font-weight: 600;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .header-nav a {
        color: white;
        text-decoration: none;
        margin-left: 30px;
        font-weight: 500;
        transition: all 0.3s ease;
        padding: 8px 16px;
        border-radius: 20px;
    }

    .header-nav a:hover {
        background: rgba(255,255,255,0.2);
        transform: translateY(-2px);
    }

    .container {
        max-width: 1400px;
        margin: 40px auto;
        padding: 0 20px;
    }

    .page-title {
        text-align: center;
        font-size: 32px;
        font-weight: 700;
        color: white;
        margin-bottom: 40px;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .stats-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 40px;
    }

    .stat-card {
        background: white;
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        text-align: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(0,0,0,0.15);
    }

    .stat-number {
        font-size: 36px;
        font-weight: 700;
        color: #667eea;
        margin-bottom: 10px;
    }

    .stat-label {
        color: #666;
        font-size: 16px;
        font-weight: 500;
    }

    .add-admin-section {
        background: white;
        border-radius: 20px;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        overflow: hidden;
        margin-bottom: 40px;
    }

    .add-admin-header {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        padding: 25px 30px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .add-admin-header h2 {
        font-size: 24px;
        font-weight: 600;
    }

    .add-btn {
        background: rgba(255,255,255,0.2);
        color: white;
        border: 2px solid white;
        padding: 12px 24px;
        border-radius: 25px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .add-btn:hover {
        background: white;
        color: #28a745;
        transform: translateY(-2px);
    }

    .add-admin-form {
        padding: 30px;
        display: none;
    }

    .add-admin-form.show {
        display: block;
        animation: slideDown 0.3s ease;
    }

    @keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .form-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 25px;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .form-group label {
        font-weight: 600;
        color: #2c3e50;
        font-size: 14px;
    }

    .form-control {
        padding: 12px 16px;
        border: 2px solid #e9ecef;
        border-radius: 10px;
        font-size: 14px;
        transition: all 0.3s ease;
        background: #f8f9fa;
    }

    .form-control:focus {
        outline: none;
        border-color: #28a745;
        box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
        background: white;
    }

    .form-actions {
        display: flex;
        gap: 15px;
        justify-content: flex-end;
    }

    .btn {
        padding: 12px 24px;
        border: none;
        border-radius: 10px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        min-width: 120px;
        justify-content: center;
    }

    .btn-primary {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3);
    }

    .btn-secondary {
        background: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background: #5a6268;
        transform: translateY(-2px);
    }

    .admins-table-container {
        background: white;
        border-radius: 20px;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        overflow: hidden;
        margin-bottom: 40px;
    }

    .table-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 25px 30px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .table-header h2 {
        font-size: 24px;
        font-weight: 600;
    }

    .search-box {
        position: relative;
        width: 300px;
    }

    .search-box input {
        width: 100%;
        padding: 12px 20px;
        border: none;
        border-radius: 25px;
        background: rgba(255,255,255,0.9);
        font-size: 14px;
        outline: none;
        transition: all 0.3s ease;
    }

    .search-box input:focus {
        background: white;
        box-shadow: 0 0 0 3px rgba(255,255,255,0.3);
    }

    .admins-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
    }

    .admins-table th {
        background: #f8f9fa;
        padding: 18px 12px;
        text-align: left;
        font-weight: 600;
        color: #495057;
        border-bottom: 2px solid #e9ecef;
        font-size: 13px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        white-space: nowrap;
    }

    .admins-table td {
        padding: 16px 12px;
        border-bottom: 1px solid #e9ecef;
        vertical-align: top;
        color: #495057;
        line-height: 1.4;
    }

    .admins-table tr:hover {
        background: #f8f9fa;
        transform: scale(1.005);
        transition: all 0.2s ease;
    }

    .admin-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 700;
        font-size: 18px;
        margin: 0 auto;
    }

    .admin-info {
        display: flex;
        flex-direction: column;
        gap: 4px;
    }

    .admin-name {
        font-weight: 600;
        color: #2c3e50;
        font-size: 15px;
    }

    .admin-email {
        color: #6c757d;
        font-size: 12px;
        word-break: break-all;
    }

    .admin-details {
        display: flex;
        flex-direction: column;
        gap: 6px;
    }

    .detail-row {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .detail-label {
        font-weight: 600;
        color: #495057;
        font-size: 12px;
        min-width: 60px;
    }

    .detail-value {
        color: #2c3e50;
        font-size: 12px;
    }

    .gender-badge {
        padding: 4px 12px;
        border-radius: 15px;
        font-size: 11px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        text-align: center;
        white-space: nowrap;
    }

    .gender-male {
        background: #d1ecf1;
        color: #0c5460;
    }

    .gender-female {
        background: #f8d7da;
        color: #721c24;
    }

    .datetime-info {
        text-align: center;
    }

    .date {
        font-weight: 600;
        color: #2c3e50;
        font-size: 13px;
    }

    .time {
        color: #7f8c8d;
        font-size: 11px;
    }

    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 8px;
        align-items: center;
    }

    .btn-edit {
        background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
        color: white;
        padding: 6px 12px;
        border: none;
        border-radius: 6px;
        font-size: 11px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 4px;
        white-space: nowrap;
        min-width: 70px;
        justify-content: center;
    }

    .btn-edit:hover {
        transform: translateY(-1px);
        box-shadow: 0 5px 15px rgba(23, 162, 184, 0.3);
    }

    .btn-delete {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        color: white;
        padding: 6px 12px;
        border: none;
        border-radius: 6px;
        font-size: 11px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 4px;
        white-space: nowrap;
        min-width: 70px;
        justify-content: center;
    }

    .btn-delete:hover {
        transform: translateY(-1px);
        box-shadow: 0 5px 15px rgba(220, 53, 69, 0.3);
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #6c757d;
    }

    .empty-state i {
        font-size: 48px;
        margin-bottom: 20px;
        opacity: 0.5;
    }

    .alert {
        padding: 15px 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        font-weight: 500;
    }

    .alert-success {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .alert-danger {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        animation: fadeIn 0.3s ease;
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    .modal-content {
        background-color: white;
        margin: 10% auto;
        padding: 30px;
        border-radius: 20px;
        width: 90%;
        max-width: 600px;
        box-shadow: 0 20px 40px rgba(0,0,0,0.3);
        animation: slideIn 0.3s ease;
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(-50px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .modal-header {
        text-align: center;
        margin-bottom: 25px;
    }

    .modal-header h3 {
        color: #2c3e50;
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .modal-header p {
        color: #6c757d;
        font-size: 16px;
    }

    .modal-actions {
        display: flex;
        gap: 15px;
        justify-content: center;
        margin-top: 30px;
        padding-top: 25px;
        border-top: 2px solid #e9ecef;
    }

    @media (max-width: 1200px) {
        .admins-table {
            font-size: 12px;
        }

        .admins-table th,
        .admins-table td {
            padding: 12px 8px;
        }

        .admin-avatar {
            width: 40px;
            height: 40px;
            font-size: 16px;
        }

        .btn-edit,
        .btn-delete {
            padding: 5px 10px;
            font-size: 10px;
        }
    }

    @media (max-width: 768px) {
        .header-content {
            flex-direction: column;
            gap: 20px;
        }

        .header-nav a {
            margin: 0 10px;
        }

        .stats-cards {
            grid-template-columns: 1fr;
        }

        .add-admin-header {
            flex-direction: column;
            gap: 20px;
            text-align: center;
        }

        .form-grid {
            grid-template-columns: 1fr;
        }

        .form-actions {
            flex-direction: column;
        }

        .btn {
            width: 100%;
        }

        .table-header {
            flex-direction: column;
            gap: 20px;
        }

        .search-box {
            width: 100%;
        }

        .admins-table {
            font-size: 11px;
        }

        .admins-table th,
        .admins-table td {
            padding: 8px 6px;
        }
    }
</style>

<div class="header">
    <div class="header-content">
        <h1>🚗 Uber Admin Dashboard</h1>
        <div class="header-nav">
            <a asp-controller="Admin" asp-action="AdminDashBoard">Dashboard</a>
            <a asp-controller="Admin" asp-action="Admin_Drivers">Drivers</a>
            <a asp-controller="Admin" asp-action="Admin_Riders">Riders</a>
            <a asp-controller="Admin" asp-action="Admin_Rides">Rides</a>
            <a asp-controller="Admin" asp-action="Admin_Admines">Admins</a>
        </div>
    </div>
</div>

<div class="container">
    <h1 class="page-title">👑 Admin Management</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            ✅ @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            ❌ @TempData["ErrorMessage"]
        </div>
    }

    <div class="stats-cards">
        <div class="stat-card">
            <div class="stat-number">@admins.Count</div>
            <div class="stat-label">Total Admins</div>
        </div>
        <div class="stat-card">
            <div class="stat-number">@admins.Count(a => !a.IsDeleted)</div>
            <div class="stat-label">Active Admins</div>
        </div>
        <div class="stat-card">
            <div class="stat-number">@admins.Count(a => a.Gender == Uber.DAL.Enums.Gender.Male)</div>
            <div class="stat-label">Male Admins</div>
        </div>
        <div class="stat-card">
            <div class="stat-number">@admins.Count(a => a.Gender == Uber.DAL.Enums.Gender.Female)</div>
            <div class="stat-label">Female Admins</div>
        </div>
    </div>

    <div class="add-admin-section">
        <div class="add-admin-header">
            <h2>➕ Add New Admin</h2>
            <button class="add-btn" onclick="toggleAddForm()">
                <span id="addBtnText">➕ Add Admin</span>
            </button>
        </div>

        <div class="add-admin-form" id="addAdminForm">
            <form method="post" asp-action="AddAdmin">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="name">Full Name *</label>
                        <input type="text" id="name" name="name" class="form-control" placeholder="Enter admin's full name" required />
                    </div>

                    <div class="form-group">
                        <label for="email">Email Address *</label>
                        <input type="email" id="email" name="email" class="form-control" placeholder="Enter admin's email" required />
                    </div>

                    <div class="form-group">
                        <label for="phoneNumber">Phone Number</label>
                        <input type="tel" id="phoneNumber" name="phoneNumber" class="form-control" placeholder="Enter phone number" />
                    </div>

                    <div class="form-group">
                        <label for="dateOfBirth">Date of Birth *</label>
                        <input type="date" id="dateOfBirth" name="dateOfBirth" class="form-control" required />
                    </div>

                    <div class="form-group">
                        <label for="gender">Gender *</label>
                        <select id="gender" name="gender" class="form-control" required>
                            <option value="">Select Gender</option>
                            <option value="@Uber.DAL.Enums.Gender.Male">Male</option>
                            <option value="@Uber.DAL.Enums.Gender.Female">Female</option>
                        </select>
                    </div>
                </div>

                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="toggleAddForm()">
                        ❌ Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">
                        ✅ Add Admin
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div class="admins-table-container">
        <div class="table-header">
            <h2>📋 All Admins</h2>
            <div class="search-box">
                <input type="text" id="searchInput" placeholder="Search admins..." onkeyup="searchAdmins()">
            </div>
        </div>

        @if (admins.Any())
        {
            <div style="overflow-x: auto;">
                <table class="admins-table" id="adminsTable">
                    <thead>
                        <tr>
                            <th>Admin</th>
                            <th>Contact Info</th>
                            <th>Personal Details</th>
                            <th>Created</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var admin in admins.Where(a => !a.IsDeleted))
                        {
                            <tr>
                                <td>
                                    <div class="admin-avatar">@admin.Name.Substring(0, 1).ToUpper()</div>
                                    <div class="admin-info">
                                        <div class="admin-name">@admin.Name</div>
                                        <div class="admin-email">@admin.Email</div>
                                    </div>
                                </td>
                                <td>
                                    <div class="admin-details">
                                        <div class="detail-row">
                                            <span class="detail-label">Email:</span>
                                            <span class="detail-value">@admin.Email</span>
                                        </div>
                                        <div class="detail-row">
                                            <span class="detail-label">Phone:</span>
                                            <span class="detail-value">@(string.IsNullOrEmpty(admin.PhoneNumber) ? "Not provided" : admin.PhoneNumber)</span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="admin-details">
                                        <div class="detail-row">
                                            <span class="detail-label">Age:</span>
                                            <span class="detail-value">@admin.Age() years</span>
                                        </div>
                                        <div class="detail-row">
                                            <span class="detail-label">Gender:</span>
                                            <span class="detail-value">
                                                <span class="gender-badge gender-@admin.Gender.ToString().ToLower()">
                                                    @admin.Gender.ToString()
                                                </span>
                                            </span>
                                        </div>
                                        <div class="detail-row">
                                            <span class="detail-label">DOB:</span>
                                            <span class="detail-value">@admin.DateOfBirth.ToString("MMM dd, yyyy")</span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="datetime-info">
                                        <div class="date">@admin.CreatedAt.ToString("MMM dd, yyyy")</div>
                                        <div class="time">@admin.CreatedAt.ToString("HH:mm")</div>
                                    </div>
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <button class="btn-edit" onclick="editAdmin('@admin.Id', '@admin.Name', '@admin.Email', '@admin.PhoneNumber', '@admin.DateOfBirth.ToString("yyyy-MM-dd")', '@admin.Gender')">
                                            ✏️ Edit
                                        </button>
                                        <button class="btn-delete" onclick="deleteAdmin('@admin.Id', '@admin.Name')">
                                            🗑️ Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div style="font-size: 48px; margin-bottom: 20px;">👑</div>
                <h3>No Admins Found</h3>
                <p>Start by adding your first admin using the "+" button above.</p>
            </div>
        }
    </div>
</div>

<!-- Edit Admin Modal -->
<div id="editModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>✏️ Edit Admin</h3>
            <p>Update information for <span id="editAdminName"></span></p>
        </div>

        <form method="post" asp-action="EditAdmin">
            <input type="hidden" id="editAdminId" name="id" />
            
            <div class="form-grid">
                <div class="form-group">
                    <label for="editName">Full Name *</label>
                    <input type="text" id="editName" name="name" class="form-control" required />
                </div>

                <div class="form-group">
                    <label for="editEmail">Email Address *</label>
                    <input type="email" id="editEmail" name="email" class="form-control" required />
                </div>

                <div class="form-group">
                    <label for="editPhoneNumber">Phone Number</label>
                    <input type="tel" id="editPhoneNumber" name="phoneNumber" class="form-control" />
                </div>

                <div class="form-group">
                    <label for="editDateOfBirth">Date of Birth *</label>
                    <input type="date" id="editDateOfBirth" name="dateOfBirth" class="form-control" required />
                </div>

                <div class="form-group">
                    <label for="editGender">Gender *</label>
                    <select id="editGender" name="gender" class="form-control" required>
                        <option value="@Uber.DAL.Enums.Gender.Male">Male</option>
                        <option value="@Uber.DAL.Enums.Gender.Female">Female</option>
                    </select>
                </div>
            </div>

            <div class="modal-actions">
                <button type="button" class="btn btn-secondary" onclick="closeModal('editModal')">
                    ❌ Cancel
                </button>
                <button type="submit" class="btn btn-primary">
                    💾 Save Changes
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 style="color: #dc3545;">⚠️ Confirm Deletion</h3>
            <p>Are you sure you want to delete admin <strong id="deleteAdminName"></strong>?</p>
        </div>
        
        <form method="post" asp-action="DeleteAdmin" style="text-align: center;">
            <input type="hidden" id="deleteAdminId" name="id" />
            <p style="color: #6c757d; font-size: 14px; margin: 20px 0;">This action cannot be undone and will remove all associated data.</p>
            
            <div class="modal-actions">
                <button type="button" class="btn btn-secondary" onclick="closeModal('deleteModal')">
                    ❌ Cancel
                </button>
                <button type="submit" class="btn btn-danger" style="background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);">
                    🗑️ Delete Admin
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    function toggleAddForm() {
        const form = document.getElementById('addAdminForm');
        const addBtn = document.getElementById('addBtnText');
        
        if (form.classList.contains('show')) {
            form.classList.remove('show');
            addBtn.textContent = '➕ Add Admin';
        } else {
            form.classList.add('show');
            addBtn.textContent = '❌ Cancel';
        }
    }

    function searchAdmins() {
        const input = document.getElementById('searchInput');
        const filter = input.value.toLowerCase();
        const table = document.getElementById('adminsTable');
        const rows = table.getElementsByTagName('tr');

        for (let i = 1; i < rows.length; i++) {
            const row = rows[i];
            const cells = row.getElementsByTagName('td');
            let found = false;

            for (let j = 0; j < cells.length; j++) {
                const cell = cells[j];
                if (cell.textContent.toLowerCase().indexOf(filter) > -1) {
                    found = true;
                    break;
                }
            }

            row.style.display = found ? '' : 'none';
        }
    }

    function editAdmin(id, name, email, phoneNumber, dateOfBirth, gender) {
        document.getElementById('editAdminId').value = id;
        document.getElementById('editAdminName').textContent = name;
        document.getElementById('editName').value = name;
        document.getElementById('editEmail').value = email;
        document.getElementById('editPhoneNumber').value = phoneNumber || '';
        document.getElementById('editDateOfBirth').value = dateOfBirth;
        document.getElementById('editGender').value = gender;
        
        document.getElementById('editModal').style.display = 'block';
    }

    function deleteAdmin(id, name) {
        document.getElementById('deleteAdminId').value = id;
        document.getElementById('deleteAdminName').textContent = name;
        document.getElementById('deleteModal').style.display = 'block';
    }

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    // Close modals when clicking outside
    window.onclick = function(event) {
        const editModal = document.getElementById('editModal');
        const deleteModal = document.getElementById('deleteModal');
        
        if (event.target === editModal) {
            editModal.style.display = 'none';
        }
        if (event.target === deleteModal) {
            deleteModal.style.display = 'none';
        }
    }

    // Auto-hide alerts after 5 seconds
    setTimeout(function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            alert.style.opacity = '0';
            setTimeout(() => alert.remove(), 300);
        });
    }, 5000);

    // Set default date to 18 years ago for new admins
    document.addEventListener('DOMContentLoaded', function() {
        const dateOfBirthInput = document.getElementById('dateOfBirth');
        if (dateOfBirthInput) {
            const today = new Date();
            const minDate = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());
            dateOfBirthInput.max = minDate.toISOString().split('T')[0];
        }
    });
</script>

